name: Deploy to Pages

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.31

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Setup Pages
        uses: actions/configure-pages@v5

      # install dependencies
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      # build
      - name: Build
        env:
          NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_APPWRITE_ENDPOINT: ${{ vars.NEXT_PUBLIC_APPWRITE_ENDPOINT }}
          NEXT_PUBLIC_APPWRITE_PROJECT: ${{ vars.NEXT_PUBLIC_APPWRITE_PROJECT }}
          NEXT_PUBLIC_APPWRITE_DATABASE_ID: ${{ vars.NEXT_PUBLIC_APPWRITE_DATABASE_ID }}
          NEXT_PUBLIC_APPWRITE_WORKSPACES_ID: ${{ vars.NEXT_PUBLIC_APPWRITE_WORKSPACES_ID }}
          NEXT_PUBLIC_APPWRITE_MEMBERS_ID: ${{ vars.NEXT_PUBLIC_APPWRITE_MEMBERS_ID }}
          NEXT_PUBLIC_APPWRITE_PROJECTS_ID: ${{ vars.NEXT_PUBLIC_APPWRITE_PROJECTS_ID }}
          NEXT_PUBLIC_APPWRITE_TASKS_ID: ${{ vars.NEXT_PUBLIC_APPWRITE_TASKS_ID }}
          NEXT_PUBLIC_APPWRITE_IMAGES_BUCKET_ID: ${{ vars.NEXT_PUBLIC_APPWRITE_IMAGES_BUCKET_ID }}
          NEXT_APPWRITE_KEY: ${{ vars.NEXT_APPWRITE_KEY }}
        run: bun run build

      - name: Upload artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./.next
          
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4